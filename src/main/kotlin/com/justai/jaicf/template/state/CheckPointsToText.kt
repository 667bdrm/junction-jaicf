package com.justai.jaicf.template.state

fun CheckPoints.getReadableResults() : Pair<List<String>, List<String>> {
    val positive = mutableListOf<String>()
    var negative = mutableListOf<String>()

    when (KeepCalm) {
        true -> positive.add("Благодаря вашей помощи Никита смог сохранить спокойствие в экстремальной ситуации.")
        false -> negative.add("Никита в шоке, он паникует, и теперь ему потребуется время, чтобы прийти в себя.")
    }

    when (CallFirefighters) {
        true -> positive.add("Вы сказали Никите, что ему нужно позвонить пожарным. Это обязательный первый пункт в любой инструкции по спасению от пожара. Вы молодец.")
        false -> negative.add("Вы упустили то, с чего начинается спасение от любого пожара, — с вызова пожарных. На ваше счастье, прежде чем запаниковать и позвонить вам, Никита сделал это сам.")
    }

    when (OpenWindow) {
        false -> positive.add("Вы правильно сделали, что запретили Никите открыть окно. Приток кислорода только заставил бы огонь разгореться сильнее.")
        true -> negative.add("Во время пожара не стоит открывать окна, только если вы не планируете выбраться через них наружу. Благодаря притоку кислорода из окна огонь разгорится только сильнее.")
    }

    when (GetExtraClothes) {
        false -> positive.add("Вы правильно оценили ситуацию: в случае пожара стоит взять лишь самое важное — паспорт, телефон, деньги — и бежать.")
        true -> negative.add("Никакого чемодана! Стоит захватить жизненно важное — паспорт, телефон, деньги — и бежать.")
    }

    when (CheckDoorknob) {
        true -> positive.add("Важно проверить температуру двери или металлической ручки. Если она горячая, вероятно, за дверью полыхает огонь, и лучше остаться внутри.")
        false -> negative.add("Никита не проверил, нагрелась ли дверь, и распахнул её. Ему крупно повезло, что за дверью не полыхал огонь.")
    }

    when (LeaveDoorClosed) {
        true -> positive.add("Вы дали Никите правильный совет. В случае пожара, выходя, нужно плотно закрыть за собой дверь, чтобы сквозняк не смог раздуть огонь. Закрывать дверь на ключ не нужно: на это уйдёт драгоценное время и у вас, и у ищущих пострадавших пожарных.")
        false -> negative.add("Никита зря оставил дверь распахнутой: сквозняк может дополнительно раздуть огонь.")
    }

    when (ChooseEmergencyPath) {
        EmergencyPaths.Stair -> positive.add("Вы правильно посоветовали Никите пойти по лестнице. Лифт при пожаре может быть смертельно опасен!")
        EmergencyPaths.Elevator -> negative.add("Во время пожара категорически нельзя пользоваться лифтом! Во время пожара обычно отключается электричество, вы можете застрять, что в такой ситуации особенно опасно. А ещё шахта лифта во время пожара работает как вытяжка, и в ней можно просто задохнуться. Хорошо, что Никита всё-таки пошёл пешком.")
    }

    when (ActivateFireAlarm) {
        true -> positive.add("Нажав на кнопку, Никита включил систему оповещения о пожаре, которая почему-то не сработала автоматически. Это простое действие может спасти жизнь и здоровье тех, кто ещё не знает о начавшемся пожаре, дав им время эвакуироваться.")
        false -> negative.add("Никита на запустил систему пожарного оповещения, которая почему-то не сработала автоматически. Хотя в общежитии почти не было людей, кого-то из оставшихся там пожар мог застать врасплох.")
    }

    when (RunOnStair) {
        true -> negative.add("Никита торопился, упал на лестнице и подвернул ногу. Пожар — чрезвычайная ситуация, и нужно поскорее оказаться в безопасности, однако очень важно не поддаваться панике, чтобы не подвергнуть себя ещё большему риску.")
    }

    when (GoToSmoke) {
        false -> positive.add("Никита поступил правильно, решив не идти в дым, а укрыться в комнате и ждать пожарных. Так меньше риск надышаться угарным газом или, двигаясь вслепую, получить травму.")
        true -> negative.add("Никита надышался дыма, но могло быть и хуже: он мог наступить на что-то острое или провалиться, потому что в дыму ничего не видно. Если путь наружу задымлён, лучше закрыться в комнате.")
    }

    when (FillGap) {
        true -> positive.add("Никите повезло оказаться в кухне: там есть тряпки и полотенца, а ещё источник воды. Сырыми тряпками стоит забить щель под дверью и вентиляционные отверстия: это на какое-то время защитит от дыма и высокой температуры.")
        false -> negative.add("Никита закрыл дверь, но через щели дым всё равно стал просачиваться в комнату, мешая ему дышать и заставляя глаза слезиться. Долго бы Никита не выдержал, ему повезло, что пожарные приехали быстро.")
    }

    when (AlertFirefighters) {
        true -> positive.add("Вы знаете, что делать! Никита дал о себе знать, и пожарные быстро смогли его эвакуировать.")
        false -> negative.add("Пока вы не в полной безопасности, не стоит расслабляться. Если бы Никита постарался подать знак пожарным, возможно, они заметили бы его гораздо раньше и эвакуировали до того, как он начал паниковать.")
    }

    when (WindowJump) {
        true -> negative.add("Прыгать из окон при пожаре крайне опасно! Это можно рассматривать лишь как крайнюю меру в случае, когда вам грозит неминуемая гибель. Максимально допустимая высота прыжка - 3 этаж. Никите крайне повезло отделаться всего лишь сломанной ногой.")
    }

    return Pair(positive, negative)
}